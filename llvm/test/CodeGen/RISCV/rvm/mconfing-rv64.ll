; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+experimental-matrix -mattr=+experimental-v \
; RUN:   -verify-machineinstrs < %s | FileCheck %s

declare i64 @llvm.riscv.msettype(
  i64)

declare i64 @llvm.riscv.msettypei(
  i64)

declare i64 @llvm.riscv.msettilemi(
  i64)

declare i64 @llvm.riscv.msettilem(
  i64)

declare i64 @llvm.riscv.msettileni(
  i64)

declare i64 @llvm.riscv.msettilen(
  i64)

declare i64 @llvm.riscv.msettileki(
  i64)

declare i64 @llvm.riscv.msettilek(
  i64)

declare i64 @llvm.riscv.msettile(
  i64)

define i64 @intrinsic_msettype(i64 %0) nounwind {
; CHECK-LABEL: intrinsic_msettype:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    msettype a0, a0
; CHECK-NEXT:    msettilem a0, a0
; CHECK-NEXT:    msettilen a0, a0
; CHECK-NEXT:    msettilek a0, a0
; CHECK-NEXT:    msettile a0, a0
; CHECK-NEXT:    msettilemi a1, 9
; CHECK-NEXT:    msettileni a1, 11
; CHECK-NEXT:    msettileki a1, 13
; CHECK-NEXT:    msettypei a1, e8, m1, bu, fp64
; CHECK-NEXT:    ret
entry:

  %1 = call i64 @llvm.riscv.msettype(i64 %0)
  %2 = call i64 @llvm.riscv.msettilem(i64 %1)
  %3 = call i64 @llvm.riscv.msettilen(i64 %2)
  %4 = call i64 @llvm.riscv.msettilek(i64 %3)
  %5 = call i64 @llvm.riscv.msettile(i64 %4)
  %6 = call i64 @llvm.riscv.msettilemi(i64 9)
  %7 = call i64 @llvm.riscv.msettileni(i64 11)
  %8 = call i64 @llvm.riscv.msettileki(i64 13)
  %9 = call i64 @llvm.riscv.msettypei(i64 64)

  ret i64 %5
}

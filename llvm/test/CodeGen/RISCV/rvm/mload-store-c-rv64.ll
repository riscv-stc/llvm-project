; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+experimental-matrix -mattr=+experimental-v,+d,+experimental-zfh \
; RUN:   -verify-machineinstrs < %s | FileCheck %s
declare <vscale x 32 x float> @llvm.riscv.mlce.m.nxv2f32(
  <vscale x 32 x float>*,
  i64, i64)

declare void @llvm.riscv.msce.m.nxv2f32(
  <vscale x 32 x float>,
  <vscale x 32 x float>*,
  i64, i64)

define void @intrinsic_mlce_msce_nxv2f32(<vscale x 32 x float>* %0, i64 %1) nounwind {
; CHECK-LABEL: intrinsic_mlce_msce_nxv2f32:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mlce32.m tr0, (a0), a1, m1
; CHECK-NEXT:    msce32.m tr0, (a0), a1, m1
; CHECK-NEXT:    ret
entry:

  %2 = call <vscale x 32 x float> @llvm.riscv.mlce.m.nxv2f32(
    <vscale x 32 x float>* %0,
    i64 %1, i64 0)

  call void @llvm.riscv.msce.m.nxv2f32(
    <vscale x 32 x float> %2,
    <vscale x 32 x float>* %0,
    i64 %1, i64 0)

  ret void
}

declare <vscale x 128 x i8> @llvm.riscv.mlce.m.nxv8i8(
  <vscale x 128 x i8>*,
  i64, i64)

declare void @llvm.riscv.msce.m.nxv8i8(
  <vscale x 128 x i8>,
  <vscale x 128 x i8>*,
  i64, i64)

define void @intrinsic_mlce_msce_nxv8i8(<vscale x 128 x i8>* %0, i64 %1) nounwind {
; CHECK-LABEL: intrinsic_mlce_msce_nxv8i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mlce8.m tr0, (a0), a1, m1
; CHECK-NEXT:    msce8.m tr0, (a0), a1, m1
; CHECK-NEXT:    ret
entry:

  %2 = call <vscale x 128 x i8> @llvm.riscv.mlce.m.nxv8i8(
    <vscale x 128 x i8>* %0,
    i64 %1, i64 0)

  call void @llvm.riscv.msce.m.nxv8i8(
    <vscale x 128 x i8> %2,
    <vscale x 128 x i8>* %0,
    i64 %1, i64 0)

  ret void
}

declare <vscale x 128 x i8> @llvm.riscv.mlcte.m(
  <vscale x 128 x i8>*,
  i64, i64)

declare void @llvm.riscv.mscte.m(
  <vscale x 128 x i8>,
  <vscale x 128 x i8>*,
  i64, i64)

define void @intrinsic_mlcte8_mscte8(<vscale x 128 x i8>* %0, i64 %1) nounwind {
; CHECK-LABEL: intrinsic_mlcte8_mscte8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mlcte8.m tr0, (a0), a1, m1
; CHECK-NEXT:    mscte8.m tr0, (a0), a1, m1
; CHECK-NEXT:    ret
entry:

  %2 = call <vscale x 128 x i8> @llvm.riscv.mlcte.m(
    <vscale x 128 x i8>* %0,
    i64 %1, i64 0)

  call void @llvm.riscv.mscte.m(
    <vscale x 128 x i8> %2,
    <vscale x 128 x i8>* %0,
    i64 %1, i64 0)

  ret void
}

; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+experimental-matrix -mattr=+experimental-v,+d,+experimental-zfh \
; RUN:   -verify-machineinstrs < %s | FileCheck %s

declare <vscale x 128 x i8> @llvm.riscv.mla.m.nxv128i8(
  <vscale x 128 x i8>*,
  i64)

declare <vscale x 128 x i8> @llvm.riscv.mlb.m.nxv128i8(
  <vscale x 128 x i8>*,
  i64)

declare <vscale x 32 x i32> @llvm.riscv.mlc.m.nxv32i32(
  <vscale x 32 x i32>*,
  i64)

declare void @llvm.riscv.msc.m.nxv32i32(
  <vscale x 32 x i32>,
  <vscale x 32 x i32>*,
  i64)

declare <vscale x 32 x i32> @llvm.riscv.msqma.mm.nxv32i32.nxv32i32.nxv128i8.nxv128i8(
  <vscale x 32 x i32>,
  <vscale x 128 x i8>,
  <vscale x 128 x i8>)

define void @intrinsic_msqma_mm_nxv32i32_nxv32i32_nxv128i8_nxv128i8(<vscale x 32 x i32>* %0, <vscale x 128 x i8>* %1, <vscale x 128 x i8>* %2, i64 %3) nounwind {
; CHECK-LABEL: intrinsic_msqma_mm_nxv32i32_nxv32i32_nxv128i8_nxv128i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mlce32.m acc0, (a0), a3
; CHECK-NEXT:    mlae8.m tr0, (a1), a3
; CHECK-NEXT:    mlbe8.m tr1, (a2), a3
; CHECK-NEXT:    msqma.mm acc0, tr0, tr1
; CHECK-NEXT:    msce32.m acc0, (a0), a3
; CHECK-NEXT:    ret
entry:
  %4 = call <vscale x 32 x i32> @llvm.riscv.mlc.m.nxv32i32(
    <vscale x 32 x i32>* %0,
    i64 %3)

  %5 = call <vscale x 128 x i8> @llvm.riscv.mla.m.nxv128i8(
    <vscale x 128 x i8>* %1,
    i64 %3)

  %6 = call <vscale x 128 x i8> @llvm.riscv.mlb.m.nxv128i8(
    <vscale x 128 x i8>* %2,
    i64 %3)

  %7 = call <vscale x 32 x i32> @llvm.riscv.msqma.mm.nxv32i32.nxv32i32.nxv128i8.nxv128i8(
    <vscale x 32 x i32> %4,
    <vscale x 128 x i8> %5,
    <vscale x 128 x i8> %6)

  call void @llvm.riscv.msc.m.nxv32i32(
    <vscale x 32 x i32> %7,
    <vscale x 32 x i32>* %0,
    i64 %3)

  ret void
}

declare <vscale x 32 x i32> @llvm.riscv.msqma.b.mm.nxv32i32.nxv32i32.nxv128i8.nxv128i8(
  <vscale x 32 x i32>,
  <vscale x 128 x i8>,
  <vscale x 128 x i8>)

define void @intrinsic_msqma_b_mm_nxv32i32_nxv32i32_nxv128i8_nxv128i8(<vscale x 32 x i32>* %0, <vscale x 128 x i8>* %1, <vscale x 128 x i8>* %2, i64 %3) nounwind {
; CHECK-LABEL: intrinsic_msqma_b_mm_nxv32i32_nxv32i32_nxv128i8_nxv128i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mlce32.m acc0, (a0), a3
; CHECK-NEXT:    mlae8.m tr0, (a1), a3
; CHECK-NEXT:    mlbe8.m tr1, (a2), a3
; CHECK-NEXT:    msqma.b.mm acc0, tr0, tr1
; CHECK-NEXT:    msce32.m acc0, (a0), a3
; CHECK-NEXT:    ret
entry:
  %4 = call <vscale x 32 x i32> @llvm.riscv.mlc.m.nxv32i32(
    <vscale x 32 x i32>* %0,
    i64 %3)

  %5 = call <vscale x 128 x i8> @llvm.riscv.mla.m.nxv128i8(
    <vscale x 128 x i8>* %1,
    i64 %3)

  %6 = call <vscale x 128 x i8> @llvm.riscv.mlb.m.nxv128i8(
    <vscale x 128 x i8>* %2,
    i64 %3)

  %7 = call <vscale x 32 x i32> @llvm.riscv.msqma.b.mm.nxv32i32.nxv32i32.nxv128i8.nxv128i8(
    <vscale x 32 x i32> %4,
    <vscale x 128 x i8> %5,
    <vscale x 128 x i8> %6)

  call void @llvm.riscv.msc.m.nxv32i32(
    <vscale x 32 x i32> %7,
    <vscale x 32 x i32>* %0,
    i64 %3)

  ret void
}
